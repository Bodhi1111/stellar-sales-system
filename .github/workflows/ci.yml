name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: stellar_sales_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint mypy autopep8 pytest pytest-asyncio pytest-cov bandit safety

      - name: Code formatting check
        run: |
          autopep8 --diff --recursive --exit-code . || echo "Code formatting issues found"

      - name: Lint with pylint
        run: |
          pylint agents/ core/ orchestrator/ scripts/ api/ --exit-zero --max-line-length=120

      - name: Type check with mypy
        run: |
          mypy agents/ core/ orchestrator/ scripts/ api/ --ignore-missing-imports || true

      - name: Security check with bandit
        run: |
          bandit -r agents/ core/ orchestrator/ scripts/ api/ -f json -o bandit-report.json || true

      - name: Dependency security check
        run: |
          safety check --json || true

      - name: Run tests with coverage
        env:
          DATABASE_URL: postgresql://user:password@localhost:5432/stellar_sales_test
        run: |
          pytest tests/ -v --cov=. --cov-report=xml --cov-report=term

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
        if: always()

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            bandit-report.json
        if: always()
